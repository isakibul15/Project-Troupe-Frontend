{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\react-todo-app\\\\react-todo-app\\\\src\\\\components\\\\Tasks.js\";\nimport React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport { Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nclass App extends Tasks {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 3,\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    }, \"TO-DO\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"flex\",\n      style: {\n        margin: \"15px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      size: \"small\",\n      style: {\n        width: \"80%\"\n      },\n      value: this.state.currentTask,\n      required: true,\n      onChange: this.handleChange,\n      placeholder: \"Add New TO-DO\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        height: \"40px\"\n      },\n      color: \"primary\",\n      variant: \"outlined\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, \"Add task\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, tasks.map(task => /*#__PURE__*/React.createElement(Paper, {\n      key: task._id,\n      className: \"flex task_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: task.completed,\n      onClick: () => this.handleUpdate(task._id),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: task.completed ? \"task line_through\" : \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, task.task), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleDelete(task._id),\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, \"delete\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Downloads/react-todo-app/react-todo-app/src/components/Tasks.js"],"names":["React","Tasks","Paper","TextField","Checkbox","Button","App","state","tasks","currentTask","render","handleSubmit","margin","width","handleChange","height","map","task","_id","completed","handleUpdate","handleDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,mBAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,mBAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAlB,CAAwB;AAAA;AAAA;AAAA,SACpBM,KADoB,GACZ;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,WAAW,EAAE;AAA1B,KADY;AAAA;;AAEpBC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AAAqB,MAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKI,YADnB;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,SAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHX;AAII,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,WAJtB;AAKI,MAAA,QAAQ,EAAE,IALd;AAMI,MAAA,QAAQ,EAAE,KAAKK,YANnB;AAOI,MAAA,WAAW,EAAC,eAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAcI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADX;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,IAAI,EAAC,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,CAFJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACP,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,IAAI,CAACC,GADd;AAEI,MAAA,SAAS,EAAC,qBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,QAAD;AACI,MAAA,OAAO,EAAED,IAAI,CAACE,SADlB;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkBH,IAAI,CAACC,GAAvB,CAFnB;AAGI,MAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eASI;AACI,MAAA,SAAS,EACLD,IAAI,CAACE,SAAL,GACM,mBADN,GAEM,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOKF,IAAI,CAACA,IAPV,CATJ,eAkBI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBJ,IAAI,CAACC,GAAvB,CADnB;AAEI,MAAA,KAAK,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,CADH,CADL,CAzBJ,CADJ,CADJ;AA2DH;;AA/DmB;;AAkExB,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\r\nimport Tasks from \"./Tasks\";\r\nimport { Paper, TextField } from \"@material-ui/core\";\r\nimport { Checkbox, Button } from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Tasks {\r\n    state = { tasks: [], currentTask: \"\" };\r\n    render() {\r\n        const { tasks } = this.state;\r\n        return (\r\n            <div className=\"App flex\">\r\n                <Paper elevation={3} className=\"container\">\r\n                    <div className=\"heading\">TO-DO</div>\r\n                    <form\r\n                        onSubmit={this.handleSubmit}\r\n                        className=\"flex\"\r\n                        style={{ margin: \"15px 0\" }}\r\n                    >\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            style={{ width: \"80%\" }}\r\n                            value={this.state.currentTask}\r\n                            required={true}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Add New TO-DO\"\r\n                        />\r\n                        <Button\r\n                            style={{ height: \"40px\" }}\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Add task\r\n                        </Button>\r\n                    </form>\r\n                    <div>\r\n                        {tasks.map((task) => (\r\n                            <Paper\r\n                                key={task._id}\r\n                                className=\"flex task_container\"\r\n                            >\r\n                                <Checkbox\r\n                                    checked={task.completed}\r\n                                    onClick={() => this.handleUpdate(task._id)}\r\n                                    color=\"primary\"\r\n                                />\r\n                                <div\r\n                                    className={\r\n                                        task.completed\r\n                                            ? \"task line_through\"\r\n                                            : \"task\"\r\n                                    }\r\n                                >\r\n                                    {task.task}\r\n                                </div>\r\n                                <Button\r\n                                    onClick={() => this.handleDelete(task._id)}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    delete\r\n                                </Button>\r\n                            </Paper>\r\n                        ))}\r\n                    </div>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}